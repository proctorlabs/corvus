name: Release Artifacts
on:
  push:
    tags: ['v**']

jobs:
  create_release:
    name: Create Github Release
    runs-on: 'ubuntu-latest'
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ''
          draft: false
          prerelease: false

  build_release:
    name: Build Release Artifacts
    needs: ['create_release']
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            build-options: [cross]
            file-tag: "amd64"
          - target: i586-unknown-linux-musl
            build-options: [cross]
            file-tag: "i586"
          - target: i686-unknown-linux-musl
            build-options: [cross]
            file-tag: "i686"
          - target: aarch64-unknown-linux-musl
            build-options: [cross]
            file-tag: "arm64"
          - target: armv7-unknown-linux-musleabihf
            build-options: [cross]
            file-tag: "armv7"

    runs-on: 'ubuntu-latest'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: '${{ matrix.target }}'
          override: true
          default: true

      - name: 'Build binary for ${{ matrix.target }}'
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ contains(matrix.build-options, 'cross') }}
          command: build
          args: '--target ${{ matrix.target }} --release'

      - name: Package tarball
        run: >-
          tar -cJf 'corvus-${{ matrix.target }}.tar.xz' -C target/${{ matrix.target }}/release corvus

      - name: Upload Release Assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./corvus-${{ matrix.target }}.tar.xz
          asset_name: corvus-${{ matrix.target }}.tar.xz
          asset_content_type: application/x-gtar

  docker_images:
    name: Create docker images
    needs: ['build_release']
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          qemu-version: latest

      - name: Docker Login
        env:
          DOCKER_USERNAME: ${{ github.actor }}
          DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: |-
          docker login ghcr.io -u "${DOCKER_USERNAME}" -p "${DOCKER_PASSWORD}"

      - name: Run Crossbuild
        run: |-
          docker buildx build \
            --platform linux/arm64,linux/amd64,linux/386 \
            -f docker/Dockerfile \
            -t "docker.pkg.github.com/proctorlabs/corvus/corvus:${{ github.ref }}" \
            --push docker/
